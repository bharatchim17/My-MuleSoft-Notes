-----------------------------------------------------------------------------
//Mule Project naming standards and structure:-
1.Project name:- kebab case 
example ---> project-name

2. file names:- kebab case 
example ---> file-name

3.flow and subflow names: kebab case
example ---> subflow-name

4.json/xml fields names:-  camel case 
example ---> streetAddress

5.variable name:- camel case
example ---> variableName

6.conmector/component name :-  First later capital and space between words
example ---> Transform Message

--------------------------------------------------------------------------------------------
//Manual deployment:- right click on project ---> Anypoint platform ---> choose environment 
--give Project_Name--> deploy application
---------------------------------------------------------------------------------------
//Mule Properties management:-
 Externalizing Properties from mule configuration help us in better
code management and need not to touch applications on configurations property changes.


1. Create property(.properties) file or yaml_file(.yaml) in src/main/resources.
   
    OracleDatabase:
            host: "localhost"
            port: "1521"
            userName: "system"
            password: "chimbh17"
            serviceName: "XEPDB1"

     httpListener:
          port: "6061"
          host: "localhost"
          readTimeOut: "30000"
          basePath: "/learnmulesoft" 

  
2. Create "configuration properties" global element.
---> load the file


3/4. Use ${key} expression extract the Property from Property file or yaml file..

        //In Database config:
            host =  ${OracleDatabase.host}
            port =  ${OracleDatabase.port}
            username = ${OracleDatabase.userName}
            password = ${OracleDatabase.password}
            service name = ${OracleDatabase.serviceName}
  



4/3. Use Mule::p('key') dataweave script to extract in dataweave(--click--> fx)

-------------------------------------------------------------------------------------
//Secure configuration properties:-


1. Create property(.properties) file or yaml_file(.yaml) in src/main/resources.
            OracleDatabase:
                  host: "localhost"
                  port: "1521"
                  userName: "system"
                  password:  "![paste_generated-password]"
                  serviceName: "XEPDB1"
                

2.Encrypt password property values:-
https://secure-properties-api.us-e1.cloudhub.io/

   - Choose 16 digits encryption key:-  abcdef0123456789
   - Use alogorithm and mode to encrypt password using above key

3. Create "Mule secure configuration property" global element.
--->  file: load the file   key: paste_here

4/5. Use ${secure::key} expression extract the Property from Property file or yaml file..

 //In Database config:
 
        host = ${secure::OracleDatabase.host}
        port =  ${secure::OracleDatabase.port}
        username = ${secure::OracleDatabase.userName}
        password = ${secure::OracleDatabase.password}
        service name  = ${secure::OracleDatabase.serviceName}


5/4. Use Mule::p('secure::key') dataweave script to extract in dataweave(--Click--> fx)

 //Mule::p('secure::db.Key_Name.password') is for descrypt value during runtime

--------------------------------------------------------------------------------------
//Environment:-
            DEV 
            PROD 
            TEST 
            UAT
//Load property files dynamically by environment:-

global element tab ---> secure properties config ---> file: ${env}.yaml  key: ${enc.key} 
global property ---> name: env |  value: dev  

--right_click-on_project---> Run As ---> Mule Application (configure) ---> Arguments--->
program Arguments:
-Denv=dev/test
-Denc.key=paste_key_here
----------------------------------------------------------------------------------
//Runtime to cloudHub 1.0

Right_click on project ---> deploy to cloudHub ---> deploy to cloudHub

//worker size:- is memory example --> 0.2 vCores 1GB memory..
The process of increasing this worker size from one value to higher is called as vertical
scaling..
//worker :-  example--> 1 , 2 , 3
The process of increasing this worker size from one value to higher is called as horizontal
scaling...

//In properties:-
key: env        value: dev/test/uat
key: enc.key    value: abcdef0123456789

//In Logging:- choose info/debug

//Hiding fields in runtime manager property section
--example--> In mule-artifact.json write "secureProperties" : ["enc.key"]

//In insight we know , How much time process taking for each transaction..
//How to make alerts..?
-----------------------------------------------------------------------------------------
