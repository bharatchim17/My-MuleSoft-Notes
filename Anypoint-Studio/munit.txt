-------------------------------------------------------------------------------------------------
//Unit Testing:-
validate of smallest unit of code to verify as it works as expected..
-------------------------------------------------------------------------------------------------
//Munit:-
Munit is Mule application testing framework that allows you to easily build automated tests for your 
integrations and APIs. it provides a full suite of integration and unit test capabilites and is fully integrated with Maven surefire for 
integration with your continuous deployment environment...
//Munit is divided in two main sub modules:
Munit 
Munit Tools

//Munit test case 
1. Behavior
2. Execution
3. Validation

With Munit you can:
- Create your test by writing mule code
- Mock processors
- spy any processor 
- verify processor calls
- Enable or ignore particular tests
- Tag tests
- check visual coverage in studio 
- generate coverage reports
--------------------------------------------------------------------------------------------------------------------------------------
//Assert Equals
The Assert Equals processor allows you to run assertions in order to validate the state 
of Mule Event's content. This is processor can be used to validate Mule Event after production code runs. 

//Assert That Event processor 
The Assert That event processor allows you to run assertions to validate the state of 
Mule event's content. You can use the Assert that processor to validate the mule event after 
the production code runs..
Assert that processor uses set of dataweave function called Munit matchers to define assertion conditions 
for any value in an expression.. 
//Assert Expression 
The Assert expression processor allows you evaluate Dataweave expression that asserts state
of Mule Event's content..This processor can be used to validate mule event after production code runs , 
using Dataweave assertion library..

//Spy Event processor
The spy processor allows you to spy what happens before and after an event processor is called.. 

#attributes:
{
	queryParams:{param1: "20" , param2: "30"}  <------- here , param1 is key & 20 is value...
}
----------------------------------------------------------------------------------------


