-------------------------------------------------------------------------------------------------------------

//How request & response data passed :-

Request headers: 
 - Headers ---> 200 Okay/Success , 400 Bad-request , 500 server-error
 - URI parms  ---> /{}  
 - Query params ---> ? key = Value  

request body:
 - JSON payload
 - XML  payload


 Mule event contin messages structure :- Request headers goes into attributes & request body goes into payload.. 

                                   |
                                   |   
                Mule event source  |  Mule event processors
                                   |
                                   |
                                   |
                                


//Mule event:- is immutable , so every changes to an instance of mule events result in creation of new instance. also , 
it contains core information processed by runtime and it follows configured application logic.
Mule event contains:-

1.mule message:- contains message i.e. payload and attributes.   

//attributes contains queries (attributes.queryparams.key) ,uri parameters also known as
 resource parameters (attributes.uriparams.key) and we put placeholder {key} in sub-path..
 headers (attributes.headers.'content-type')..to fetch ID attributes of payload.@id  

2.variables:- are Mule event metadata that use in flow. 


//Message source:- such as http listner , schedular , new/updated file component.
message source triggers generation of mule event and dispatches that event to flow..


--------------------------------------------------------------------------------------------------------------------------------------------


//payload contains body of the message , for example content of file , record from database or response from rest or web service..

//Database conector:- Allows us to interact with relation database , such as MySQL ,Oracle , ms SQL , it provides set of operations on database tables, as well as executing SQL queries and store procedures.


// Root element is optional in Json where as, in XML is mandatory and in CSV is not required..

-------------------------------------------------------------------------------------------------------------------------
// Mule ESB is a lightweight java-based enterprise service bus (ESB) and integration platform
that allows developers to connect Applications together quickly and easily , enabling them to 
exchange data .

Benefits:-
 - Reduced development time
 - Cloud enablement
 - Designing  API's 
 - API Management

 //Mule has two version community and enterprise.

---------------------------------------------------------------------------------------------
 //Integration:- The process of making data transfer between multiple systems is known
 as integration.

 //Integration ways/Types of integration :-
 1. JMS (PUB SUB model)
 2. Webservices (REST & SOAP)
 3. SFTP
 4. Database
 5. System based connectors (Saleforce , SAP , Amezon etc)

---------------------------------------------------------------------------------------------

//Package Explorer:-

src/main/mule   ---> Contain mule configuration file .xml
src/test/munit  ---> contain M-unit test cases of src/main/mule 

src/main/resources ---> contain log4j2.xml , wsdl file , ssl file & API
        - log4j2   ---> contain login for log component
        -  API     ---> contain RAML files

src/main/java   ---> contain mule java file
src/test/java   ---> contain test of java file in src/main/java

src/main/resource --->  under example or schema  folder we get , payload for inbounds/Outbound  
src/test/resource ---> contain test of the file in src/main/resource

-------------------------------------------------------------------------------------------

//Web Services:-
A web service is program which runs in server and whose results are shareable over network/integration
to make data transfer between Applications. Examples:SOAP(development:3%) & REST(development:94%)..

// Uniform.Resource.Locator:-
http/https-protocol://host:port/base-path/sub-path

//We should not use same ports for multiple configuration when configurations 
are running together in one Applications or in one server.

//Export file ---> Right click on file  ---> Export ---> Mule ---> Deployable Archive..
//Import file ---> File --->  Package mule Application (.jar) 

----------------------------------------------------------------------------------

//ESB integration tool :-

Integration tool called as ESB tool when it provides below features:-

  - Components to orchestrate integrations (Drag and Drop components.)
  - transformations (Transform done by components and dataweave logic.)
  - Enrichments (process of concatenation of data with each other.)
-----------------------------------------------------------------------------------
//Mule flows has three types:-   Main | Sub-flow | Private-flow


 //Main flow:-
it has:- 
       - event source
       - event processors
       - error handling
 
                                   |
                                   |
                                   |   
                Mule event source  |  Mule event processors
                                   |        
                                   | 
                                   +
                               Error_Handling
       
                                   

 The flow has event source called as main flow

--------------------------------------------------------------------------------

  //Sub-flow:-
it has:- 
   - event processors
      
 
    
    |
    |   
    |  Mule event processors
    |        
    |        
    

 - The flow has  only event processors called as sub flow we can add Error_Handling to it
 by wrap it in try scope..
 - Subflows are processed synchronously; that is, execution of the calling flow halts until the subflow is complete.

----------------------------------------------------------------------------------------------

 //Private-flow:-
it has:- 
       - event processors
       - error handling

    |
    |  Mule event processors
    |   
    |        + 
    |        
    |   Error_Handling
    |
    

-------------------------------------------------------------------------------------------------
//Asynchronous flows:- execute in parallel to the calling flow; i.e., they are processed asynchronously.
We can do this by wrapping the flow reference component in an async component.

//synchronous flows:- is also processed synchronously , We add synchronous flows to our Mule application by adding 
regular flows; there is no “synchronous flow” component. 

----------------------------------------------------------------------------------------
//Streaming API
Streaming API enables Streaming of events using push technology and provides subscription mechanism for receiving events in near real time..
The Streaming API subscription mechanism supports multiple types of events , including PushTopic events , generic events , platform events and change Data capture events.. 

//Push technology , also called the publish/subscribe model , transfers information that is initiated from server to client..
--------------------------------------------------------------------------------------------

//When http listner source receives an http request , source triggers flow by using request data.
//Host:- indicates where request are received , host can be hostname such as localhost , www.mulesoft.com  or ip address such as 175.0.0.1.
//Port:- indicates where request are listened/received.
//Protocols:- indicates protocols for communication example:- http/https/TLS. 

//Schedular component enables us to trigger flow when time-based condition is met. it use same timezone as machine on which mule is running.
if application running in cloudHub then schedular conforms to UTC timezone.
1. Frequency:- at which schedular triggers flow.
2. Start delay:- is ammount of time to wait before triggering flow..
3. Time Unit :- for values of Frequency and Start Delay. values are: second , minute , days , hours.
---------------------------------------------------------------------------------------------------
//What is API ..?
API stands for application programming interface . it's set of rule and protocols that allows
different software applications to communicate and interact with each other..

//SOAP APIs: These APIs use simple object Access protocol. client and server exchange
Messages using XML. this is less flexible API that was more popular in past.
//REST API: These are most popular and flexible in term of data format and can support 
various media types. the client sends request to server as data.. the server uses this
client input to start internal function and return output data back to client..
- HTTP methods: GET,POST,PUT,DELETE 
- Stateless: does not store information of client 
- Resources: REST APIs are built around resources , which represent entities or object 
being exposed by API...

//What is mulesoft ?
mulesoft is software company that provides an integration platform called anypoint 
platform.
mulesoft provides anypoint platform to take an API through its complete Development
lifecycle.
mulesoft anypoint platforms offers a range of tools and capabilities to support
integration efforts for example: design centre , exchange , anypoint studio , runtime manager,
api manager , anypoint monitoring etc..
//What is API integration..?
integration is process of combining two or more things to create a whole..
integration allows information to be shared between the connected systems..
//Why integration?
Because digital transformation is no longer an option, but a necessity..
customers expect fast , digital and on-demand experiences..
The more digital transformation initiatives that need to be implemented , the wider 
delivery gap gets. the central piller to solve this huge challenge is to understand 
how integration drives digital transformation..
//Why mulesoft for api integration?
- robust integration capabilities
- API-Led connectivity
- extensive Connectors ecosystem 
- hybrid integration
- scalability and performance 
- Developer productivity
- monitoring and management
----------------------------------------------------------------------