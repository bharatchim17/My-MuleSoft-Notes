--------------------------------------------------------------------------------------------
//Jenkins is web-Application written in java , Jenkins is continuous integration tool that allows continuous development , test and 
deployment of newly created codes...

//continuous Integration Tools:-
1.Bamboo 
2.CI Tools 
3.Jenkins 
4.Buildbot 
5.Travis CI  
6.Jenkins:- Bosch introduce use of cloudBees (enterprise Jenkins company) from Jenkins..
7.Apache Gump

//Featuers of Jenkins
1.Easy installation 
2.Easy configuration
3.Plugins
4.Extensible
5.Distributed 

//Jenkins Pipeline :- continuous integration and continuous Delivery (CI-CD)
development --> code commit --> Build --> Test --> Release --> Deploy/Deliver --> Production.

Jenkins Master (Server)
        |
        |
        |
Jenkins slave (local machine)

------------------------------------------------------------------------------------------
//CICD workflow-
continuous integration: continuous integration is practice that drive development
teams to implement small changes and check in code to version control repositories 
Frequently.
continuous delivery/continuous deployment: continuous deployment automates the 
deployment processs from version control. Developer need not put efforts to deploy..

//Jenkins jobs:
We create jenkins jobs to automate deployment from SCM tool/version control to servers.
After check in code to SCM tool like GITHUB happened then job get's the source code from
SCM tool..
We can create jenkins job Pipelines in two ways:
1. Scripted Pipeline
2. Declarative Pipeline
configure pipeline to build , execute Munit test and deploy..
---------------------------------------------------------------------------------------------
//Two ways to trigger jenkins jobs automatically:
1. Push notification: SCM tool (GITHUB) notifies jenkins on new commit push.
//go to settings ---> Webhooks
payload url: https://paste_hoste_here/github-webhooks/
just push event (active)
//In jenkin project
build environment: select github hook trigger for GITScm polling..

2. Polling: jenkins polls in regular schedules.
//In jenkin project
build environment: select build perodically
https://crontab.cronhub.io/
-----------------------------------------------------------------------------------------
//Jenkins pipeline allows us to define set of stages while continuous deployment,
we can define stages to execute continuous deployment stage by stage..

Declarative Checkout SCM ---> Build ---> Test ---> Deployment

//Step1: Choose pipeline
Defination: Pipeline script from SCM
Choose SCM : git
Script path: Jenkinsfile
//Step2: create Jenkinsfile in studio  https://alc.workshops.mulesoft.com/alc-workshop/4.5.0/module7/module7_lab4.html

//Step3: provide maven plugin in pom.xml https://docs.mulesoft.com/munit/latest/munit-maven-plugin
<plugin>
      <groupId>com.mulesoft.munit.tools</groupId>
      <artifactId>munit-maven-plugin</artifactId>
      <version>${munit.version}</version>
      <executions>
        <execution>
          <id>test</id>
          <phase>test</phase>
          <goals>
            <goal>test</goal>
          </goals>
        </execution>
      </executions>
    </plugin>

 MUnit provides a Maven plugin that enables you to run your MUnit tests as part of
  your continuous integration environment...

//Step4: Download maven plugin in jenkins tool..
----------------------------------------------------------------------------------
Declarative Checkout SCM ---> Build ---> Test ---> Deployment

//Step1: Choose pipeline
Defination: Pipeline script 
Script : write groovy script in editor.. add stage as Scripted pipeline for git repositories
----------------------------------------------------------------------------------------------



