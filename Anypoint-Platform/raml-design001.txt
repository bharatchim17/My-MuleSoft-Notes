---------------------------------------------------------------------------------------
1. Data-Type:- 
//In datatype_folder fragment
type: object | array
properties:  | items:

//In root_file
types:
Key_Name: !include paste_path

//mention-underBody
body:
Key_Name

//mention-inType ✅
type: Key_Name

---------------------------------------------------------------------------------------
2.Example:-  
//In example folder fragment
 type: object <---- type and example is written on 2nd line (.json)
 example: | 
    {
      
    }

//write in root
types:
Key_Name(example_File_Name): !include copy_path of file which is in example_folder..

//mention as 
type : Key_Name  <----- We can remove type also , as body: Key_Name because type: object | item written in example fragments

//We can directly mention(.json file in example folder):

example: !include copy_path of file which is in example_folder..✅
---------------------------------------------------------------------------------------
2.1.Example of RAMl datatype:-

//In example folder fragment 
            value:
              code: 404       <------ paste (propertie's| items) field in datatype Below the value 
              reasonphrase:" Not Found"
              details: string


//In datatype_folder fragment

example: !include copy_path of file which is in example_folder  <-----here example is 
on same line of properties..

examples: 
    example1: !include copy_path of file which is in example_folder 
    example2: !include copy_path of file which is in example_folder 

------------------------------------------------------------------------------------------------
3. Resource-type:-  here you can paste Methods like get , post

//Resource-type folder fragment:

                      get?:   <------------- make methods in resourceTypes as optional so we can refer in root if we want
                        responses:
                            200:
                              type: success-example

//In root_file: 
resourceTypes:
 Key_Name: !include paste path

//Mention type as:  ✅
type: Key_Name
  
   
                        //Mention type as:
                        type: !include copy_path of file which is in datatype_folder (when Key_Name not mentioned)
-----------------------------------------------------------------------------------------------------

4.Traits:- We can edit part of resource type such as
query_parameters, responses also , headers (correlation-id , transaction-id)..


//In Traits_folder fragment:-
 Key-1_Name:
  partIn-root-fragment_paste-here
 Key-2_Name:
  partIn-root-fragment_paste-here 
 
                                                    queryParameters:
                                                      field_name:

                                                    headers:
                                                          x-transaction-id:

                                                        headers:
                                                          x-correlation-id:

                                                        headers:
                                                            Accept?:
                                                              example: application/json
                                                              description: MediaType of Expected Response

                                                        responses:
                                                          <<errorCode>>:
                                                            headers:
                                                              Content-Type: 
                                                            body:
                                                            Error-datatype

//In root_file: 
traits:
 Key-1_Name: !include paste_pathOf-- Traits_file-1
 Key-2_Name: !include paste_pathOf-- Traits_file-2


//mention using resourceTypes file:   <------------If resourceTypes not created then we use it in root file..
is: [Key-1_Name , Key-2_Name]


//mention using resourceTypes file:
is:
 - Key_Name: {errorCode: 500}

                                                          is:
                                                          - has-accept-header
                                                          - has-error-traits: {errorCode: 404}  
----------------------------------------------------------------------------------------

5.Library:- is collection 

//In Library fragment:-

//usage: write Tittle_for usage of root_file
types: | resourceTypes: | traits:
datatype-Name: | resourceTypes-Name: | traits-Name:

//In root_file:
uses:
  Key_Name: paste path of library file here without include tag..

//mention in type
type: Key_Name.Paste-datatype:

-------------------------------------------------------------------------------------
6.User-Documentation:

//Documentation_folder fragment
tittle:
content:

//In root_file
documentation:
- !include paste_path


//We can also , write directly in root raml file..
documentation:
tittle:
content:

--------------------------------------------------------------------------------------
7.Annotation-Type
--------------------------------------------------------------------------------------
8.security_Schemes:-

//in root_file:

securitySchemes:
  basic:    <--------  here basic is Key_Name 
    type: OAuth 1.0 | OAuth 2.0 | Basic Authentication	| Digest Authentication	| Pass Through	| x-{other} <--------this is global Scheme
    description: this is Basic Authentication
                                             
                                                
 securitySchemes OAuth 2.0 link:
https://docs.mulesoft.com/api-manager/latest/about-configure-api-for-oauth

//mention under methods As:
securedBy: [basic|oAuth2.0]  //here basic or oAuth2.0 is Key_Name

                                                                    securitySchemes:
                                                                    basicAuth: !include /securitySchemes/basic-Auth.raml
                                                                    securedBy:
                                                                    - basic

                                                                    /v1/cases:
                                                                        securedBy:
                                                                          - basic
                                                                        post:

                                                                    /v1/cases:
                                                                        post:
                                                                        securedBy: [basic]
securedBy:
 - secure                <------- here , secure is Key_Name..
-----------------------------------------------------------------------------------------
securitySchemes:
       <<securityScheme_Name_Of_Your_Choise>>:
           type: ----> OAuth 1.0 | OAuth 2.0 | Basic Authentication	| Digest Authentication	| Pass Through	| x-{other}
           describedBy: ---> request | responses | query_parameters | headers
           settings: authorization uri | access token
--------------------------------------------------------------------------------------
//In security_Schemes file:
type: Basic Authentication
//In root file:
securitySchemes:
  secure: !include /security/securityScheme.raml  

//mention as:
securedBy:
  - secure       
-----------------------------------------------------------------------------------------
//If there is external security_Schemes or in Folder:

In Security_folder fragment:-
type: OAuth 1.0 | OAuth 2.0 | Basic Authentication	| Digest Authentication	| Pass Through	| x-{other} <--------this is global Scheme
description: The API secured by basic authentification...

                                                          #%RAML 1.0 SecurityScheme
                                                          type: Basic Authentication
                                                          describedBy:
                                                            headers:
                                                              Authorization: 

                                                          #%RAML 1.0 SecurityScheme
                                                          type: x-clientIdEnforcement
                                                          describedBy:
                                                            headers:
                                                              client_id:
                                                              client_secrte:

//in root_file:
securitySchemes:
  basic: !include ...paste path here..
                                                          securitySchemes:
                                                            basic: !include /securitySchemes/basic-Auth.raml
                                                            client-id-enforcement: !include /securitySchemes/client-id-enforcement.raml

//mention under methods As:
securedBy: [basic/oAuth2.0]  //here basic or oAuth2.0 is Key_Name..

                                                                    securitySchemes:
                                                                    basicAuth: !include /securitySchemes/basic-Auth.raml
                                                                    securedBy:
                                                                    - basic

                                                                    /v1/cases:
                                                                        securedBy:
                                                                          - basic
                                                                        post:

                                                                    /v1/cases:
                                                                        post:
                                                                        securedBy: [basic]

                                                                     /hotels:   
                                                                      post:
                                                                        securedBy:
                                                                          - client-id-enforcement
----------------------------------------------------------------------------------------------------------------------------------------- 

